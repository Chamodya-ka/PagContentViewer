{"ast":null,"code":"var _jsxFileName = \"/home/chamodyaa/Workspace_Other/side_project/ContentManagement/PagContentViewer/src/randomVideoPlayer/RandomVideoPlayer.js\",\n  _s = $RefreshSig$();\nimport { useMemo, useRef, useState } from \"react\";\nimport { tvVideoMapping } from \"../commonData/tvVideoMapping\";\nimport { RetrieveAllVideosList } from \"../hooks/retrieveAllVideos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction handleOnEnded(currentVideo) {\n  currentVideo.set();\n}\nexport function RandomVideoPlayer({\n  tvName\n}) {\n  _s();\n  const videoRef = useRef();\n  const [currentVideoCount, setCurrentVideoCount] = useState(0);\n  const [videoListJSON, setFileList] = useState([]);\n  const videoDir = tvVideoMapping.find(mapping => mapping.tvName == tvName).directory;\n  useEffect(() => {\n    RetrieveAllVideosList(setFileList);\n  }, []);\n  console.log(videoListJSON, \"HERE\");\n  console.log(`localhost:8080/${videoDir}/${videoListJSON.$currentVideoCount}.mp4`);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [tvName, \" all videos\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      onEnded: () => handleOnEnded({\n        get: currentVideoCount,\n        set: setCurrentVideoCount\n      }),\n      ref: videoRef,\n      width: 750,\n      controls: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: `localhost:8080/${videoDir}/${videoListJSON.$currentVideoCount}.mp4`,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(RandomVideoPlayer, \"BoDng7qkHz39M5uDS7fuhnTpZq0=\");\n_c = RandomVideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"RandomVideoPlayer\");","map":{"version":3,"names":["useMemo","useRef","useState","tvVideoMapping","RetrieveAllVideosList","jsxDEV","_jsxDEV","Fragment","_Fragment","handleOnEnded","currentVideo","set","RandomVideoPlayer","tvName","_s","videoRef","currentVideoCount","setCurrentVideoCount","videoListJSON","setFileList","videoDir","find","mapping","directory","useEffect","console","log","$currentVideoCount","children","fileName","_jsxFileName","lineNumber","columnNumber","onEnded","get","ref","width","controls","src","type","_c","$RefreshReg$"],"sources":["/home/chamodyaa/Workspace_Other/side_project/ContentManagement/PagContentViewer/src/randomVideoPlayer/RandomVideoPlayer.js"],"sourcesContent":["import {useMemo, useRef, useState} from \"react\";\n\nimport {tvVideoMapping} from \"../commonData/tvVideoMapping\";\nimport {RetrieveAllVideosList} from \"../hooks/retrieveAllVideos\";\n\nfunction handleOnEnded(currentVideo) {\n    currentVideo.set()\n}\n\nexport function RandomVideoPlayer({tvName}) {\n    const videoRef = useRef();\n\n    const [currentVideoCount, setCurrentVideoCount] = useState(0);\n    const [videoListJSON,setFileList] = useState([])\n\n    const videoDir = tvVideoMapping.find(mapping => mapping.tvName == tvName).directory;\n    useEffect(()=>{RetrieveAllVideosList(setFileList)},[]);\n    console.log(videoListJSON,\"HERE\")\n    console.log(`localhost:8080/${videoDir}/${videoListJSON.$currentVideoCount}.mp4`);\n\n    return (\n        <>\n            <div>\n                {tvName} all videos\n            </div>\n            <video onEnded={()=>handleOnEnded({get:currentVideoCount, set:setCurrentVideoCount})} ref={videoRef} width={750} controls>\n                <source src={`localhost:8080/${videoDir}/${videoListJSON.$currentVideoCount}.mp4`} type=\"video/mp4\"/>\n                {/* <source src={\"http://localhost:8080/resources/all/ForBiggerFun.mp4\"} type=\"video/mp4\"/> */}\n            </video>\n        </>\n    );\n}"],"mappings":";;AAAA,SAAQA,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAE/C,SAAQC,cAAc,QAAO,8BAA8B;AAC3D,SAAQC,qBAAqB,QAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjE,SAASC,aAAaA,CAACC,YAAY,EAAE;EACjCA,YAAY,CAACC,GAAG,CAAC,CAAC;AACtB;AAEA,OAAO,SAASC,iBAAiBA,CAAC;EAACC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAMC,QAAQ,GAAGd,MAAM,CAAC,CAAC;EAEzB,MAAM,CAACe,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACgB,aAAa,EAACC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMkB,QAAQ,GAAGjB,cAAc,CAACkB,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACT,MAAM,IAAIA,MAAM,CAAC,CAACU,SAAS;EACnFC,SAAS,CAAC,MAAI;IAACpB,qBAAqB,CAACe,WAAW,CAAC;EAAA,CAAC,EAAC,EAAE,CAAC;EACtDM,OAAO,CAACC,GAAG,CAACR,aAAa,EAAC,MAAM,CAAC;EACjCO,OAAO,CAACC,GAAG,CAAE,kBAAiBN,QAAS,IAAGF,aAAa,CAACS,kBAAmB,MAAK,CAAC;EAEjF,oBACIrB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,GACKf,MAAM,EAAC,aACZ;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN1B,OAAA;MAAO2B,OAAO,EAAEA,CAAA,KAAIxB,aAAa,CAAC;QAACyB,GAAG,EAAClB,iBAAiB;QAAEL,GAAG,EAACM;MAAoB,CAAC,CAAE;MAACkB,GAAG,EAAEpB,QAAS;MAACqB,KAAK,EAAE,GAAI;MAACC,QAAQ;MAAAT,QAAA,eACrHtB,OAAA;QAAQgC,GAAG,EAAG,kBAAiBlB,QAAS,IAAGF,aAAa,CAACS,kBAAmB,MAAM;QAACY,IAAI,EAAC;MAAW;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElG,CAAC;EAAA,eACV,CAAC;AAEX;AAAClB,EAAA,CAtBeF,iBAAiB;AAAA4B,EAAA,GAAjB5B,iBAAiB;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}