{"ast":null,"code":"var _jsxFileName = \"/home/chamodyaa/Workspace_Other/side_project/ContentManagement/PagContentViewer/src/randomVideoPlayer/RandomVideoPlayer.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { tvVideoMapping } from \"../commonData/tvVideoMapping\";\nimport { RetrieveAllVideosList } from \"../hooks/retrieveAllVideos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction handleOnEnded(currentVideo) {\n  console.log(\"ended\");\n  currentVideo.set(currentVideo.get + 1);\n}\nexport function RandomVideoPlayer({\n  tvName\n}) {\n  _s();\n  const videoRef = useRef();\n  const [currentVideoCount, setCurrentVideoCount] = useState(0);\n  const [videoListJSON, setVideoListJSON] = useState([]);\n  const videoDir = tvVideoMapping.find(mapping => mapping.tvName == tvName).directory;\n  RetrieveAllVideosList().then(res);\n  console.log(videoListJSON[0]);\n  console.log(`http://localhost:8080/resources/${videoDir}/${videoListJSON[currentVideoCount]}`);\n  // console.log(JSON.parse(videoListJSON.json),\"HERE\")\n  // console.log(`localhost:8080/${videoDir}/${videoListJSON.$(currentVideoCount)}.mp4`);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [tvName, \" all videos\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      onEnded: () => handleOnEnded({\n        get: currentVideoCount,\n        set: setCurrentVideoCount\n      }),\n      ref: videoRef,\n      width: 750,\n      controls: true,\n      autoplay: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: `http://localhost:8080/resources/${videoDir}/${videoListJSON[currentVideoCount]}`,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(RandomVideoPlayer, \"8uj4A1Y0PreAcg6nxXxGlqaowu8=\");\n_c = RandomVideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"RandomVideoPlayer\");","map":{"version":3,"names":["useEffect","useRef","useState","tvVideoMapping","RetrieveAllVideosList","jsxDEV","_jsxDEV","Fragment","_Fragment","handleOnEnded","currentVideo","console","log","set","get","RandomVideoPlayer","tvName","_s","videoRef","currentVideoCount","setCurrentVideoCount","videoListJSON","setVideoListJSON","videoDir","find","mapping","directory","then","res","children","fileName","_jsxFileName","lineNumber","columnNumber","onEnded","ref","width","controls","autoplay","src","type","_c","$RefreshReg$"],"sources":["/home/chamodyaa/Workspace_Other/side_project/ContentManagement/PagContentViewer/src/randomVideoPlayer/RandomVideoPlayer.js"],"sourcesContent":["import {useEffect, useRef, useState} from \"react\";\n\nimport {tvVideoMapping} from \"../commonData/tvVideoMapping\";\nimport {RetrieveAllVideosList} from \"../hooks/retrieveAllVideos\";\n\nfunction handleOnEnded(currentVideo) {\n    console.log(\"ended\")\n    currentVideo.set(currentVideo.get+1);\n}\n\n\nexport function RandomVideoPlayer({tvName}) {\n    const videoRef = useRef();\n\n    const [currentVideoCount, setCurrentVideoCount] = useState(0);\n    const [videoListJSON,setVideoListJSON] = useState([])\n\n    const videoDir = tvVideoMapping.find(mapping => mapping.tvName == tvName).directory;\n    RetrieveAllVideosList().then( res )\n    console.log(videoListJSON[0])\n    console.log(`http://localhost:8080/resources/${videoDir}/${videoListJSON[currentVideoCount]}`)\n    // console.log(JSON.parse(videoListJSON.json),\"HERE\")\n    // console.log(`localhost:8080/${videoDir}/${videoListJSON.$(currentVideoCount)}.mp4`);\n\n    return (\n        <>\n            <div>\n                {tvName} all videos\n            </div>\n            <video onEnded={()=>handleOnEnded({get:currentVideoCount, set:setCurrentVideoCount})} ref={videoRef} width={750} controls autoplay>\n                <source src={`http://localhost:8080/resources/${videoDir}/${videoListJSON[currentVideoCount]}`} type=\"video/mp4\"/>\n                {/* <source src={`http://localhost:8080/resources/all/${videoListJSON[currentVideoCount]}`} type=\"video/mp4\"/> */}\n            </video>\n        </>\n    );\n}"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAEjD,SAAQC,cAAc,QAAO,8BAA8B;AAC3D,SAAQC,qBAAqB,QAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjE,SAASC,aAAaA,CAACC,YAAY,EAAE;EACjCC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACpBF,YAAY,CAACG,GAAG,CAACH,YAAY,CAACI,GAAG,GAAC,CAAC,CAAC;AACxC;AAGA,OAAO,SAASC,iBAAiBA,CAAC;EAACC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAMC,QAAQ,GAAGjB,MAAM,CAAC,CAAC;EAEzB,MAAM,CAACkB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACmB,aAAa,EAACC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAErD,MAAMqB,QAAQ,GAAGpB,cAAc,CAACqB,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACT,MAAM,IAAIA,MAAM,CAAC,CAACU,SAAS;EACnFtB,qBAAqB,CAAC,CAAC,CAACuB,IAAI,CAAEC,GAAI,CAAC;EACnCjB,OAAO,CAACC,GAAG,CAACS,aAAa,CAAC,CAAC,CAAC,CAAC;EAC7BV,OAAO,CAACC,GAAG,CAAE,mCAAkCW,QAAS,IAAGF,aAAa,CAACF,iBAAiB,CAAE,EAAC,CAAC;EAC9F;EACA;;EAEA,oBACIb,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACIvB,OAAA;MAAAuB,QAAA,GACKb,MAAM,EAAC,aACZ;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN3B,OAAA;MAAO4B,OAAO,EAAEA,CAAA,KAAIzB,aAAa,CAAC;QAACK,GAAG,EAACK,iBAAiB;QAAEN,GAAG,EAACO;MAAoB,CAAC,CAAE;MAACe,GAAG,EAAEjB,QAAS;MAACkB,KAAK,EAAE,GAAI;MAACC,QAAQ;MAACC,QAAQ;MAAAT,QAAA,eAC9HvB,OAAA;QAAQiC,GAAG,EAAG,mCAAkChB,QAAS,IAAGF,aAAa,CAACF,iBAAiB,CAAE,EAAE;QAACqB,IAAI,EAAC;MAAW;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE/G,CAAC;EAAA,eACV,CAAC;AAEX;AAAChB,EAAA,CAxBeF,iBAAiB;AAAA0B,EAAA,GAAjB1B,iBAAiB;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}