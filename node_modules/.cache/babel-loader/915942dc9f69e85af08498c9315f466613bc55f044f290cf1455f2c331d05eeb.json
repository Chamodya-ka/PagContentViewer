{"ast":null,"code":"var _jsxFileName = \"/home/chamodyaa/Workspace_Other/side_project/ContentManagement/PagContentViewer/src/randomVideoPlayer/RandomVideoPlayer.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport useSWR from 'swr';\nimport { tvVideoMapping } from \"../commonData/tvVideoMapping\";\nimport { RetrieveAllVideosList } from \"../hooks/retrieveAllVideos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction handleOnEnded(currentVideo) {\n  console.log(\"ended\");\n  currentVideo.set(currentVideo.get + 1);\n}\nfunction VideoLooper({\n  JSONData,\n  ...props\n}) {\n  _s();\n  const videoRef = useRef();\n  const [currentVideoCount, setCurrentVideoCount] = useState(0);\n  const videoDir = tvVideoMapping.find(mapping => mapping.tvName == props.tvName).directory;\n  console.log(currentVideoCount, \" Video\", JSONData[currentVideoCount]);\n  const VideoContent = useMemo(() => {\n    /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        onEnded: () => handleOnEnded({\n          get: currentVideoCount,\n          set: setCurrentVideoCount\n        }),\n        ref: videoRef,\n        width: 750,\n        controls: true,\n        autoPlay: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: `http://localhost:8080/resources/${videoDir}/${JSONData[currentVideoCount]}`,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }, [currentVideoCount]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [props.tvName, \" - all videos\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      onEnded: () => handleOnEnded({\n        get: currentVideoCount,\n        set: setCurrentVideoCount\n      }),\n      ref: videoRef,\n      width: 750,\n      controls: true,\n      autoPlay: true,\n      children: /*#__PURE__*/_jsxDEV(VideoContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(VideoLooper, \"a0jaq6r+oa8/lAhakYRiJXPTx54=\");\n_c = VideoLooper;\n{/* <video onEnded={()=>handleOnEnded({get:currentVideoCount, set:setCurrentVideoCount})} ref={videoRef} width={750} controls autoPlay> */}\n{/* <source src={`http://localhost:8080/resources/${videoDir}/${JSONData[currentVideoCount]}`} type=\"video/mp4\"/> */}\n{/* <source src={`http://localhost:8080/resources/all/${JSONData[currentVideoCount]}`} type=\"video/mp4\"/> */}\n{/* </video> */}\nfunction GetJSONList(props) {\n  _s2();\n  const fetcher = (...args) => fetch(...args).then(res => res.json());\n  const {\n    data,\n    error,\n    isLoading\n  } = useSWR('http://localhost:8081', fetcher);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 23\n  }, this);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(VideoLooper, {\n    JSONData: JSON.parse(data),\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 12\n  }, this);\n}\n_s2(GetJSONList, \"3etLDUffADz62tD7g9gJKxYxEy4=\", false, function () {\n  return [useSWR];\n});\n_c2 = GetJSONList;\nexport function RandomVideoPlayer({\n  tvName\n}) {\n  return /*#__PURE__*/_jsxDEV(GetJSONList, {\n    tvName: tvName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n\n  // const [videoListJSON,setVideoListJSON] = useState([])\n  // const [retrievedList, setRetrievedList] = useState(false)\n\n  // RetrieveAllVideosList().then( res => {setVideoListJSON(res);setRetrievedList(true)});\n  // useEffect(()=>{\n  //     console.log(videoListJSON);\n  // },[retrievedList])\n  // setVideoListJSON(getJSONList());\n\n  // console.log(videoListJSON[0])\n  // console.log(`http://localhost:8080/resources/${videoDir}/${videoListJSON[currentVideoCount]}`)\n  // console.log(JSON.parse(videoListJSON.json),\"HERE\")\n  // console.log(`localhost:8080/${videoDir}/${videoListJSON.$(currentVideoCount)}.mp4`);\n}\n_c3 = RandomVideoPlayer;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"VideoLooper\");\n$RefreshReg$(_c2, \"GetJSONList\");\n$RefreshReg$(_c3, \"RandomVideoPlayer\");","map":{"version":3,"names":["useEffect","useMemo","useRef","useState","useSWR","tvVideoMapping","RetrieveAllVideosList","jsxDEV","_jsxDEV","Fragment","_Fragment","handleOnEnded","currentVideo","console","log","set","get","VideoLooper","JSONData","props","_s","videoRef","currentVideoCount","setCurrentVideoCount","videoDir","find","mapping","tvName","directory","VideoContent","children","onEnded","ref","width","controls","autoPlay","src","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","GetJSONList","_s2","fetcher","args","fetch","then","res","json","data","error","isLoading","JSON","parse","_c2","RandomVideoPlayer","_c3","$RefreshReg$"],"sources":["/home/chamodyaa/Workspace_Other/side_project/ContentManagement/PagContentViewer/src/randomVideoPlayer/RandomVideoPlayer.js"],"sourcesContent":["import {useEffect, useMemo, useRef, useState} from \"react\";\nimport useSWR from 'swr'\n\nimport {tvVideoMapping} from \"../commonData/tvVideoMapping\";\nimport {RetrieveAllVideosList} from \"../hooks/retrieveAllVideos\";\n\nfunction handleOnEnded(currentVideo) {\n    console.log(\"ended\")\n    currentVideo.set(currentVideo.get+1);\n}\n\nfunction VideoLooper({JSONData,...props}) {\n    const videoRef = useRef();\n    const [currentVideoCount, setCurrentVideoCount] = useState(0);\n    const videoDir = tvVideoMapping.find(mapping => mapping.tvName == props.tvName).directory;\n    console.log(currentVideoCount,\" Video\", JSONData[currentVideoCount])\n\n    const VideoContent = useMemo(()=>{\n        <>\n            <video onEnded={()=>handleOnEnded({get:currentVideoCount, set:setCurrentVideoCount})} ref={videoRef} width={750} controls autoPlay>\n            <source src={`http://localhost:8080/resources/${videoDir}/${JSONData[currentVideoCount]}`} type=\"video/mp4\"/>\n            </video>\n            </>\n    },[currentVideoCount])\n\n    return (\n        <>\n            <div>\n                {props.tvName} - all videos\n            </div>\n            <video onEnded={()=>handleOnEnded({get:currentVideoCount, set:setCurrentVideoCount})} ref={videoRef} width={750} controls autoPlay>\n                <VideoContent/>\n            </video>\n           \n        </>\n    );\n}\n             {/* <video onEnded={()=>handleOnEnded({get:currentVideoCount, set:setCurrentVideoCount})} ref={videoRef} width={750} controls autoPlay> */}\n                {/* <source src={`http://localhost:8080/resources/${videoDir}/${JSONData[currentVideoCount]}`} type=\"video/mp4\"/> */}\n                {/* <source src={`http://localhost:8080/resources/all/${JSONData[currentVideoCount]}`} type=\"video/mp4\"/> */}\n             {/* </video> */}\n            \n\nfunction GetJSONList(props) {\n    const fetcher = (...args) => fetch(...args).then(res => res.json());    \n    const { data, error, isLoading } = useSWR('http://localhost:8081', fetcher)\n    if (error) return <div>Error</div>;\n    if (isLoading) return <div>Loading</div>;\n    return <VideoLooper JSONData={JSON.parse(data)} {...props}/>;\n}\n\nexport function RandomVideoPlayer({tvName}) {\n\n    return(\n        <GetJSONList tvName={tvName}/>\n    );\n    \n    \n    // const [videoListJSON,setVideoListJSON] = useState([])\n    // const [retrievedList, setRetrievedList] = useState(false)\n    \n    // RetrieveAllVideosList().then( res => {setVideoListJSON(res);setRetrievedList(true)});\n    // useEffect(()=>{\n    //     console.log(videoListJSON);\n    // },[retrievedList])\n    // setVideoListJSON(getJSONList());\n\n    // console.log(videoListJSON[0])\n    // console.log(`http://localhost:8080/resources/${videoDir}/${videoListJSON[currentVideoCount]}`)\n    // console.log(JSON.parse(videoListJSON.json),\"HERE\")\n    // console.log(`localhost:8080/${videoDir}/${videoListJSON.$(currentVideoCount)}.mp4`);\n\n    \n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}