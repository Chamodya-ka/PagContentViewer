{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport async function RetrieveAllVideosList() {\n  _s();\n  // TODO: add sub directories if needed\n  const [fileList, setFileList] = useState();\n  try {\n    await fetch(\"http://localhost:8081\").then(response => {\n      !response.ok;\n      throw new Error(\"Network response was not OK\");\n    }).then(response => {\n      setFileList(response.json);\n    });\n  } catch (error) {\n    console.error(\"There has been a problem with your fetch operation:\", error);\n  }\n  return fileList;\n}\n_s(RetrieveAllVideosList, \"v6OOHZSjwTghP7o3lpqAAd7Bgbk=\");\n_c = RetrieveAllVideosList;\nvar _c;\n$RefreshReg$(_c, \"RetrieveAllVideosList\");","map":{"version":3,"names":["useState","RetrieveAllVideosList","_s","fileList","setFileList","fetch","then","response","ok","Error","json","error","console","_c","$RefreshReg$"],"sources":["/home/chamodyaa/Workspace_Other/side_project/ContentManagement/PagContentViewer/src/hooks/retrieveAllVideos.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport async function RetrieveAllVideosList(){\n    // TODO: add sub directories if needed\n    const [fileList,setFileList] = useState()\n    try {\n        await fetch(\"http://localhost:8081\")\n            .then(response => {!response.ok \n                throw new Error(\"Network response was not OK\");\n              })\n            .then(response => {setFileList(response.json)})\n      } catch (error) {\n        console.error(\"There has been a problem with your fetch operation:\", error);\n      }\n    return fileList\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,eAAeC,qBAAqBA,CAAA,EAAE;EAAAC,EAAA;EACzC;EACA,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,CAAC;EACzC,IAAI;IACA,MAAMK,KAAK,CAAC,uBAAuB,CAAC,CAC/BC,IAAI,CAACC,QAAQ,IAAI;MAAC,CAACA,QAAQ,CAACC,EAAE;MAC3B,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD,CAAC,CAAC,CACHH,IAAI,CAACC,QAAQ,IAAI;MAACH,WAAW,CAACG,QAAQ,CAACG,IAAI,CAAC;IAAA,CAAC,CAAC;EACrD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAAC;EAC7E;EACF,OAAOR,QAAQ;AACnB;AAACD,EAAA,CAbqBD,qBAAqB;AAAAY,EAAA,GAArBZ,qBAAqB;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}