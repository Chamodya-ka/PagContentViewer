{"ast":null,"code":"var _jsxFileName = \"/home/chamodyaa/Workspace_Other/side_project/ContentManagement/PagContentViewer/src/hooks/retrieveAllVideos.js\",\n  _s = $RefreshSig$();\nimport useSWR from 'swr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport async function RetrieveAllVideosList(setFileList) {\n  _s();\n  const fetcher = (...args) => fetch(...args).then(res => res.json());\n  const {\n    data,\n    error,\n    isLoading\n  } = useSWR('/api/user/123', fetcher);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 21\n  }, this);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 25\n  }, this);\n\n  // render data\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"hello \", data.name, \"!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n  // const fetchFileList = async() => {\n  try {\n    // Make a GET request using the Fetch API\n    const response = await fetch('http://localhost:8081');\n\n    // Check if the response is successful (status code 200-299)\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n\n    // Parse the JSON data from the response\n    const result = await response.json();\n\n    // Update the state with the fetched data\n    setFileList(JSON.parse(result));\n  } catch (error) {\n    console.error('Error fetching data:', error.message);\n  }\n  // };\n}\n_s(RetrieveAllVideosList, \"3etLDUffADz62tD7g9gJKxYxEy4=\", false, function () {\n  return [useSWR];\n});\n_c = RetrieveAllVideosList;\nvar _c;\n$RefreshReg$(_c, \"RetrieveAllVideosList\");","map":{"version":3,"names":["useSWR","jsxDEV","_jsxDEV","RetrieveAllVideosList","setFileList","_s","fetcher","args","fetch","then","res","json","data","error","isLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","name","response","ok","Error","result","JSON","parse","console","message","_c","$RefreshReg$"],"sources":["/home/chamodyaa/Workspace_Other/side_project/ContentManagement/PagContentViewer/src/hooks/retrieveAllVideos.js"],"sourcesContent":["import useSWR from 'swr'\nexport async function RetrieveAllVideosList(setFileList){\n  const fetcher = (...args) => fetch(...args).then(res => res.json());\n\n  const { data, error, isLoading } = useSWR('/api/user/123', fetcher)\n \n  if (error) return <div>failed to load</div>\n  if (isLoading) return <div>loading...</div>\n \n  // render data\n  return <div>hello {data.name}!</div>\n    // const fetchFileList = async() => {\n        try {\n            // Make a GET request using the Fetch API\n            const response = await fetch('http://localhost:8081');\n            \n            // Check if the response is successful (status code 200-299)\n            if (!response.ok) {\n              throw new Error('Network response was not ok');\n            }\n      \n            // Parse the JSON data from the response\n            const result = await response.json();\n      \n            // Update the state with the fetched data\n            setFileList(JSON.parse(result));\n        \n          } catch (error) {\n            console.error('Error fetching data:', error.message);\n          }\n        // };\n      \n}"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,KAAK;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACxB,OAAO,eAAeC,qBAAqBA,CAACC,WAAW,EAAC;EAAAC,EAAA;EACtD,MAAMC,OAAO,GAAGA,CAAC,GAAGC,IAAI,KAAKC,KAAK,CAAC,GAAGD,IAAI,CAAC,CAACE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;EAEnE,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGd,MAAM,CAAC,eAAe,EAAEM,OAAO,CAAC;EAEnE,IAAIO,KAAK,EAAE,oBAAOX,OAAA;IAAAa,QAAA,EAAK;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC3C,IAAIL,SAAS,EAAE,oBAAOZ,OAAA;IAAAa,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;;EAE3C;EACA,oBAAOjB,OAAA;IAAAa,QAAA,GAAK,QAAM,EAACH,IAAI,CAACQ,IAAI,EAAC,GAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAClC;EACI,IAAI;IACA;IACA,MAAME,QAAQ,GAAG,MAAMb,KAAK,CAAC,uBAAuB,CAAC;;IAErD;IACA,IAAI,CAACa,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;;IAEA;IACA,MAAMC,MAAM,GAAG,MAAMH,QAAQ,CAACV,IAAI,CAAC,CAAC;;IAEpC;IACAP,WAAW,CAACqB,IAAI,CAACC,KAAK,CAACF,MAAM,CAAC,CAAC;EAEjC,CAAC,CAAC,OAAOX,KAAK,EAAE;IACdc,OAAO,CAACd,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACe,OAAO,CAAC;EACtD;EACF;AAER;AAACvB,EAAA,CA/BqBF,qBAAqB;EAAA,QAGNH,MAAM;AAAA;AAAA6B,EAAA,GAHrB1B,qBAAqB;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}